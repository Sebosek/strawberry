/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import {
  state,
} from './components/avatar/avatar';

declare global {

  namespace StencilComponents {
    interface StrawberryAvatar {
      'initials': string;
      'state': state;
    }
  }

  interface HTMLStrawberryAvatarElement extends StencilComponents.StrawberryAvatar, HTMLStencilElement {}

  var HTMLStrawberryAvatarElement: {
    prototype: HTMLStrawberryAvatarElement;
    new (): HTMLStrawberryAvatarElement;
  };
  interface HTMLElementTagNameMap {
    'strawberry-avatar': HTMLStrawberryAvatarElement;
  }
  interface ElementTagNameMap {
    'strawberry-avatar': HTMLStrawberryAvatarElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'strawberry-avatar': JSXElements.StrawberryAvatarAttributes;
    }
  }
  namespace JSXElements {
    export interface StrawberryAvatarAttributes extends HTMLAttributes {
      'initials'?: string;
      'onElapsed'?: (event: CustomEvent<string>) => void;
      'state'?: state;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface StrawberrySwitcher {
      'switched': boolean;
    }
  }

  interface HTMLStrawberrySwitcherElement extends StencilComponents.StrawberrySwitcher, HTMLStencilElement {}

  var HTMLStrawberrySwitcherElement: {
    prototype: HTMLStrawberrySwitcherElement;
    new (): HTMLStrawberrySwitcherElement;
  };
  interface HTMLElementTagNameMap {
    'strawberry-switcher': HTMLStrawberrySwitcherElement;
  }
  interface ElementTagNameMap {
    'strawberry-switcher': HTMLStrawberrySwitcherElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'strawberry-switcher': JSXElements.StrawberrySwitcherAttributes;
    }
  }
  namespace JSXElements {
    export interface StrawberrySwitcherAttributes extends HTMLAttributes {
      'onChanged'?: (event: CustomEvent<boolean>) => void;
      'switched'?: boolean;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;